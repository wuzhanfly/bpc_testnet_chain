version: "3.8"
services:
  blockscout-db:
    image: postgres:14
    restart: always
    container_name: 'postgres'
    command: postgres -c 'max_connections=200'
    environment:
      POSTGRES_PASSWORD: 'uafwGGCHnF3rym0'
      POSTGRES_USER: 'blockscout'
      # POSTGRES_HOST_AUTH_METHOD: 'trust'
    volumes:
      - ./.data/blockscout:/var/lib/postgresql/data/
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    # ports:
    #   - "7432:5432"

  redis_db:
    image: 'redis:alpine'
    command: redis-server
    container_name: redis_db
    volumes:
      - ./.data/redis:/data
    ports:
      - "6379:6379"
    restart: always

  blockscout:
    depends_on:
      - blockscout-db
      - redis_db
    image: blockscout/blockscout:${DOCKER_TAG:-latest}
    restart: always
    stop_grace_period: 5m
    container_name: 'blockscout'
    links:
      - blockscout-db:database
    command: sh -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file:
      -  ./config/envs/metadap-blockscout.env
    environment:
      ETHEREUM_JSONRPC_HTTP_URL: "http://host.docker.internal:8545/"
      ETHEREUM_JSONRPC_TRACE_URL: http://host.docker.internal:8545/
      ETHEREUM_JSONRPC_WS_URL: ws://host.docker.internal:8546/
      NETWORK: "MetaDAP Testnet"
      CHAIN_ID: "${CHAIN_ID}"
      DATABASE_URL: "postgresql://blockscout:uafwGGCHnF3rym0@blockscout-db:5432/blockscout?ssl=false"
    ports:
      - "4000:4000"
    volumes:
      - ./logs/:/app/logs/
    logging:
      driver: "json-file"
      options:
        max-file: "3"   # number of files or file count
        max-size: "100m" # file size


  visualizer:
    #   extends:
    #     file: ./services/docker-compose-visualizer.yml
    #     service: visualizer
    image: ghcr.io/blockscout/visualizer:${VISUALIZER_DOCKER_TAG:-latest}
    # pull_policy: always
    platform: linux/amd64
    restart: always
    container_name: 'visualizer'
    env_file:
      -  ./config/envs/common-visualizer.env
    # ports:
    #   - 8152:8050

  sig-provider:
    image: ghcr.io/blockscout/sig-provider:${SIG_PROVIDER_DOCKER_TAG:-latest}
    # pull_policy: always
    restart: always
    platform: linux/amd64
    container_name: 'sig-provider'
    # ports:
    #   - 8151:8050

  frontend:
    depends_on:
      - blockscout
    image: ghcr.io/blockscout/frontend:${FRONTEND_DOCKER_TAG:-latest}
    # pull_policy: always
    platform: linux/amd64
    restart: always
    container_name: 'frontend'
    env_file:
      -  ./config/envs/metadap-frontend.env
    ports:
      - 3004:3000

  stats-db:
    depends_on:
      - blockscout
    image: postgres:14
    restart: always
    container_name: 'stats-postgres'
    command: postgres -c 'max_connections=200'
    environment:
      POSTGRES_PASSWORD: ''
      POSTGRES_USER: 'postgres'
      POSTGRES_HOST_AUTH_METHOD: 'trust'
    # ports:
    #   - 7433:5432
    volumes:
      - ./.data/stats-db-data:/var/lib/postgresql/data/

  stats:
    depends_on:
      - stats-db
    image: ghcr.io/blockscout/stats:${STATS_DOCKER_TAG:-latest}
    # pull_policy: always
    platform: linux/amd64
    restart: always
    container_name: 'stats'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file:
      -  ./config/envs/common-stats.env
    environment:
      - STATS__DB_URL=postgres://postgres:@stats-db:5432/stats
      - STATS__BLOCKSCOUT_DB_URL=postgresql://blockscout:uafwGGCHnF3rym0@blockscout-db:5432/blockscout
      - STATS__CREATE_DATABASE=true
      - STATS__RUN_MIGRATIONS=true
    ports:
      - 8153:8050
